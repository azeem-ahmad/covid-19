{"version":3,"sources":["assets/images/covid-19-logo.png","components/Summary.js","components/CountriesTable.js","components/Details.js","App.js","reportWebVitals.js","index.js"],"names":["useStylesCards","makeStyles","root","maxWidth","borderBottom","transition","marginTop","media","height","cardDate","fontSize","gridStyles","theme","flexGrow","container","width","marginLeft","marginRight","marginBottom","summaryNumberCount","title","textAlign","globalSection","Summary","props","classesCards","classesGrid","global","currentDate","className","Grid","spacing","item","xs","Typography","variant","component","md","Card","CardContent","color","gutterBottom","value","NewConfirmed","displayType","thousandSeparator","thousandsGroupStyle","Date","toDateString","TotalConfirmed","NewDeaths","TotalDeaths","TotalRecovered","countriesTable","lastUpdated","display","padding","CountriesTable","countriesData","globalData","data","columns","field","options","exportButton","pageSizeOptions","emptyRowsWhenPaging","maxBodyHeight","fixedColumns","left","right","toUTCString","Details","useState","countries","setCountries","setGlobal","setCurrentDate","loading","setLoading","loadingStyles","justifyContent","alignItems","minHeight","useEffect","a","axios","get","res","console","log","Countries","Global","fetchData","loadingClasses","CircularProgress","href","target","rel","class","useStylesApp","logowrapper","App","classesApp","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63dd9b76.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/covid-19-logo.6f644fb2.png\";","import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport NumberFormat from 'react-number-format';\r\nimport './../App.css';\r\n\r\n\r\nconst useStylesCards = makeStyles({\r\n  root: {\r\n    maxWidth: '100%',\r\n    borderBottom: '3px solid transparent',\r\n    transition: 'all .2s ease-in-out',\r\n    '&:hover': {\r\n      borderBottom: '2px solid #3f51b5',\r\n      marginTop: '-3px',\r\n      // transform: 'translate(0, -3px)'\r\n    }\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  cardDate: {\r\n    fontSize: '13px',\r\n    marginTop: '5px'\r\n  }\r\n});\r\nconst gridStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    width: '90%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    marginBottom: '15px'\r\n  },\r\n  summaryNumberCount: {\r\n    fontSize: '26px',\r\n    marginTop: '6px',\r\n    marginBottom: '10px'\r\n  },\r\n  title : {\r\n    textAlign: 'center',\r\n    fontSize: '30px'\r\n  },\r\n  globalSection: {\r\n\r\n  }\r\n}));\r\n\r\n\r\nconst Summary = (props) => {\r\n  const classesCards = useStylesCards();\r\n  const classesGrid = gridStyles();\r\n  \r\n  const {global, currentDate} = props;\r\n  // console.log(global);\r\n  // console.log(currentDate);\r\n\r\n  return (\r\n\r\n    <>\r\n\r\n    <div className={classesGrid.root}>\r\n\r\n          <Grid container spacing={2} className={`${classesGrid.container} ${classesGrid.globalSection}`}>\r\n\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h4\" component=\"h2\" className={classesGrid.title}>\r\n                Global\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item md xs={12}>\r\n              <Card className={classesCards.root}>\r\n                  <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      New Cases\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classesGrid.summaryNumberCount}>\r\n                      <NumberFormat value={global.NewConfirmed} displayType={'text'} thousandSeparator={true} thousandsGroupStyle=\"lakh\" />\r\n                    {/* {global.NewConfirmed} */}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      Number of new cases from COVID-19\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classesCards.cardDate}>\r\n                      {new Date(currentDate).toDateString()}\r\n                    </Typography>\r\n                  </CardContent>\r\n              </Card>\r\n            </Grid>\r\n\r\n            <Grid item md xs={12}>\r\n              <Card className={classesCards.root}>\r\n                <CardContent>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Total Cases\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classesGrid.summaryNumberCount}>\r\n                    <NumberFormat value={global.TotalConfirmed} displayType={'text'} thousandSeparator={true} thousandsGroupStyle=\"lakh\" />\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Number of total confirmed cases from COVID-19\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classesCards.cardDate}>\r\n                    {new Date(currentDate).toDateString()}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card> \r\n            </Grid>\r\n\r\n            <Grid item md xs={12}>\r\n              <Card className={classesCards.root}>\r\n                <CardContent>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    New Deaths\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classesGrid.summaryNumberCount}>\r\n                    <NumberFormat value={global.NewDeaths} displayType={'text'} thousandSeparator={true} thousandsGroupStyle=\"lakh\" />\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Number of new deaths from COVID-19\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classesCards.cardDate}>\r\n                    {new Date(currentDate).toDateString()}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card> \r\n            </Grid>\r\n\r\n            <Grid item md xs={12}>\r\n              <Card className={classesCards.root}>\r\n                <CardContent>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Total Deaths\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classesGrid.summaryNumberCount}>\r\n                    <NumberFormat value={global.TotalDeaths} displayType={'text'} thousandSeparator={true} thousandsGroupStyle=\"lakh\" />\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Number of total deaths from COVID-19\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classesCards.cardDate}>\r\n                    {new Date(currentDate).toDateString()}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card> \r\n            </Grid>\r\n\r\n            <Grid item md xs={12}>\r\n              <Card className={classesCards.root}>\r\n                <CardContent>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Total Recovered\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classesGrid.summaryNumberCount}>\r\n                    <NumberFormat value={global.TotalRecovered} displayType={'text'} thousandSeparator={true} thousandsGroupStyle=\"lakh\" />\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Number of total recovered from COVID-19\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classesCards.cardDate}>\r\n                    {new Date(currentDate).toDateString()}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card> \r\n            </Grid>\r\n\r\n\r\n\r\n          </Grid>\r\n\r\n    </div>\r\n\r\n\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default Summary;","import React from 'react';\r\nimport './../App.css';\r\nimport MaterialTable from 'material-table';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst gridStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    width: '90%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    marginBottom: '15px'\r\n  },\r\n  countriesTable: {\r\n    marginBottom: '30px'\r\n  },\r\n  title : {\r\n    textAlign: 'center',\r\n    marginTop: '40px',\r\n    marginBottom: '10px',\r\n    fontSize: '30px'\r\n  },\r\n  lastUpdated : {\r\n    // fontStyle: 'italic',\r\n    textAlign: 'right',\r\n    display: 'block',\r\n    padding: '8px 0',\r\n    fontSize: '13px',\r\n    color: '#616a81',\r\n    '@media(max-width: 480px)' : {\r\n      textAlign: 'center'\r\n    }\r\n\r\n  }\r\n}));\r\n\r\n\r\n\r\nfunction CountriesTable(props) {\r\n\r\n  // const [data, setData] = useState(props.countriesData)\r\n  const countriesData = props.countriesData;\r\n  const globalData = props.global;\r\n  const classesGrid = gridStyles();\r\n\r\n  \r\n  const columns = [\r\n    { title: \"Countries\", field: \"Country\" },\r\n    { title: \"Country Code\", field: \"CountryCode\" },\r\n    { title: \"New Confirmed\", field: \"NewConfirmed\" },\r\n    { title: \"Total Confirmed\", field: \"TotalConfirmed\" },\r\n    { title: \"New Deaths\", field: \"NewDeaths\" },\r\n    { title: \"Total Deaths\", field: 'TotalDeaths' },\r\n    { title: \"New Recovered\", field: 'NewRecovered' },\r\n    { title: \"Total Recovered\", field: 'TotalRecovered' },\r\n  ]\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n  //     .then(resp => resp.json())\r\n  //     .then(resp => {\r\n  //       setData(resp)\r\n  //     })\r\n  // }, [])\r\n  \r\n\r\n  return (\r\n    <div className={classesGrid.root}>\r\n\r\n      <Grid container spacing={2} className={classesGrid.container}>\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\" component=\"h2\" className={classesGrid.title}>\r\n              By Country\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} className={classesGrid.countriesTable}>\r\n            <MaterialTable\r\n              title=\"COVID-19 Summary By Country\"\r\n              data={countriesData}\r\n              columns={columns} \r\n              options={{\r\n                exportButton: true,\r\n                // pageSize: 10,      // make initial page size\r\n                pageSizeOptions:[5,10,20,50],      // rows selection options\r\n                emptyRowsWhenPaging: false,     // To avoid of having empty rows\r\n\r\n                maxBodyHeight: 500,\r\n                fixedColumns: {\r\n                  left: 0,\r\n                  right: 0\r\n                }\r\n\r\n              }}\r\n            />\r\n          <span className={classesGrid.lastUpdated}>last updated: {new Date(globalData.Date).toUTCString()}</span>\r\n          </Grid>\r\n\r\n\r\n\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountriesTable;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './../App.css';\r\nimport Summary from './../components/Summary';\r\nimport CountriesTable from './../components/CountriesTable';\r\n\r\n\r\nfunction Details() {\r\n\r\nconst [countries, setCountries] = useState([]);\r\nconst [global, setGlobal] = useState([]);\r\nconst [currentDate, setCurrentDate] = useState([]);\r\nconst [loading, setLoading] = useState(true);\r\n\r\n\r\nconst loadingStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: '40%',\r\n      minHeight: '200px'\r\n    },\r\n  }));\r\n\r\n\r\nuseEffect(() => {\r\n    async function fetchData() {\r\n        const res = await axios.get('https://api.covid19api.com/summary');\r\n        console.log(res);\r\n        // console.log(res.data.Global);\r\n        // console.log(res.data.Date);\r\n\r\n        setCountries(res.data.Countries);\r\n        setGlobal(res.data.Global);\r\n        setCurrentDate(res.data.Date);\r\n        setLoading(false);\r\n        \r\n    }\r\n    fetchData();\r\n    \r\n}, []);\r\n\r\n\r\nconst loadingClasses = loadingStyles();\r\n\r\n\r\n  return (\r\n    <>\r\n    {\r\n        loading ? <div className={loadingClasses.root}><CircularProgress /></div>\r\n        :\r\n        <>\r\n        <div className=\"summary-section\">\r\n          <Summary global={global} currentDate={currentDate} />\r\n        </div>\r\n\r\n        <div className=\"countries-section\">\r\n          <CountriesTable countriesData={countries} global={global} />\r\n        </div>\r\n\r\n        <div className=\"api-used-section\">\r\n          <p>API Used: \r\n            <a href=\"https://api.covid19api.com/summary\" target=\"_blank\" rel=\"noreferrer\">\r\n              https://api.covid19api.com/summary\r\n            </a>\r\n          </p>\r\n          <p class=\"made-with\">Made with <i class=\"fa fa-heart\"></i> By &lt;Azeem /&gt;</p>\r\n        </div>\r\n        \r\n\r\n        \r\n        {/* <div>\r\n            {\r\n                countries.map(item => {\r\n                    return (\r\n                        <li key={item.ID}>{item.Country}</li>\r\n                    )\r\n                })\r\n            }\r\n        </div> */}\r\n        </>\r\n    }\r\n\r\n  </>\r\n\r\n\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default Details;\r\n","import './App.css';\nimport logo from './assets/images/covid-19-logo.png';\nimport Details from './components/Details';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStylesApp = makeStyles({\n  logowrapper: {\n    textAlign: 'center',\n    padding: '30px 0 50px 0',\n  }\n});\n\n\n\nfunction App() {\n  const classesApp = useStylesApp();\n\n  return (\n    <div className=\"App\">\n      <div className=\"overlay corona-shape-bg\"></div>      \n\n      <div className={classesApp.logowrapper}>\n        <img src={logo} alt=\"logo\" />\n      </div>\n\n      <Details />\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}